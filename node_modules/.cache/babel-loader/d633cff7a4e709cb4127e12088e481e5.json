{"ast":null,"code":"var _jsxFileName = \"E:\\\\\\u684C\\u9762\\u6587\\u6863\\\\react_gua\\\\src\\\\App.jsx\";\n//创建外壳\nimport React, { Component } from \"react\";\nimport { nanoid } from 'nanoid';\nimport List from \"./List\";\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Todo extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      inpValue: '',\n      todos: []\n    };\n\n    this.addTodo = () => {\n      const todos = [...this.state.todos];\n      todos.push({\n        content: this.state.inpValue,\n        done: false,\n        time: nanoid()\n      }); //更新状态渲染到页面\n\n      this.setState({\n        todos: todos\n      });\n    };\n\n    this.handelTodo = event => {\n      if (event.target.value == \"\") {\n        alert('输入不能为空');\n        return;\n      }\n\n      this.setState({\n        inpValue: event.target.value\n      });\n    };\n\n    this.deleteTodo = time => {\n      const {\n        todos\n      } = this.state; //过滤一下todos数组,如果和传进来的一样就过滤掉传进来的time\n\n      const newTodo = todos.filter(todo => todo.time !== time);\n      this.setState({\n        todos: newTodo\n      });\n    };\n\n    this.doneTodo = time => {\n      const newTodo = [...this.state.todos];\n      newTodo.forEach(todo => {\n        console.log('donedonedone');\n\n        if (todo.time === time) {\n          if (todo.done === false) {\n            todo.done = true;\n          } else {\n            todo.done = false;\n          }\n        }\n      });\n      this.setState({\n        todos: newTodo\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todo-cell\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: this.state.inpValue,\n          onChange: this.handelTodo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.addTodo,\n          children: \"\\u589E\\u52A0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), //遍历数组传给List\n      this.state.todos.map(todo => /*#__PURE__*/_jsxDEV(List, { ...todo,\n        deleteTodo: this.deleteTodo,\n        doneTodo: this.doneTodo\n      }, nanoid(), false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 29\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"names":["React","Component","nanoid","List","Todo","state","inpValue","todos","addTodo","push","content","done","time","setState","handelTodo","event","target","value","alert","deleteTodo","newTodo","filter","todo","doneTodo","forEach","console","log","render","map"],"sources":["E:/桌面文档/react_gua/src/App.jsx"],"sourcesContent":["//创建外壳\r\nimport React,{Component} from \"react\";\r\nimport {nanoid} from 'nanoid'\r\nimport List from \"./List\";\r\nimport './App.css'\r\n\r\n\r\nexport default class Todo extends Component {\r\n\r\n    //初始化状态\r\n    state = {\r\n        inpValue:'',\r\n        todos:[],\r\n    }\r\n\r\n    //button的点击事件,添加一个todoList\r\n    addTodo = () =>{\r\n        const todos = [...this.state.todos]\r\n        todos.push({\r\n            content: this.state.inpValue,\r\n            done: false,\r\n            time:nanoid()\r\n        })\r\n        //更新状态渲染到页面\r\n        this.setState({\r\n            todos:todos,\r\n        })\r\n    }\r\n\r\n    //input的事件监听，获取到输入的值\r\n    handelTodo = (event) =>{\r\n        if(event.target.value == \"\") {\r\n            alert('输入不能为空')\r\n            return\r\n        }\r\n        this.setState({\r\n            inpValue:event.target.value\r\n        })\r\n    }\r\n\r\n    //删除一个todoList\r\n    deleteTodo = (time) =>{\r\n        const {todos} = this.state\r\n        //过滤一下todos数组,如果和传进来的一样就过滤掉传进来的time\r\n        const newTodo = todos.filter(todo => todo.time !== time)\r\n        this.setState({todos:newTodo})\r\n    }\r\n\r\n    //增加一个done\r\n    doneTodo = (time) =>{\r\n        const newTodo = [...this.state.todos]\r\n        newTodo.forEach(todo =>{\r\n            console.log('donedonedone');\r\n            if(todo.time === time) {\r\n                if (todo.done === false) {\r\n                    todo.done = true\r\n                } else {\r\n                    todo.done = false\r\n                }\r\n            }\r\n        })\r\n        this.setState({todos:newTodo})\r\n        }\r\n    \r\n    render() {\r\n        return(\r\n            <div className=\"todo-cell\">\r\n                <div>\r\n                    <input type=\"text\" value={this.state.inpValue} onChange={this.handelTodo}/>\r\n                    <button onClick={this.addTodo}>增加</button>\r\n                </div>\r\n                    {\r\n                        //遍历数组传给List\r\n                        this.state.todos.map((todo) =>(\r\n                            <List key={nanoid()} {...todo} deleteTodo={this.deleteTodo} doneTodo={this.doneTodo}/>\r\n                        ))\r\n                    }\r\n            </div>\r\n        )\r\n    }\r\n}"],"mappings":";AAAA;AACA,OAAOA,KAAP,IAAcC,SAAd,QAA8B,OAA9B;AACA,SAAQC,MAAR,QAAqB,QAArB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAO,WAAP;;AAGA,eAAe,MAAMC,IAAN,SAAmBH,SAAnB,CAA6B;EAAA;IAAA;IAAA,KAGxCI,KAHwC,GAGhC;MACJC,QAAQ,EAAC,EADL;MAEJC,KAAK,EAAC;IAFF,CAHgC;;IAAA,KASxCC,OATwC,GAS9B,MAAK;MACX,MAAMD,KAAK,GAAG,CAAC,GAAG,KAAKF,KAAL,CAAWE,KAAf,CAAd;MACAA,KAAK,CAACE,IAAN,CAAW;QACPC,OAAO,EAAE,KAAKL,KAAL,CAAWC,QADb;QAEPK,IAAI,EAAE,KAFC;QAGPC,IAAI,EAACV,MAAM;MAHJ,CAAX,EAFW,CAOX;;MACA,KAAKW,QAAL,CAAc;QACVN,KAAK,EAACA;MADI,CAAd;IAGH,CApBuC;;IAAA,KAuBxCO,UAvBwC,GAuB1BC,KAAD,IAAU;MACnB,IAAGA,KAAK,CAACC,MAAN,CAAaC,KAAb,IAAsB,EAAzB,EAA6B;QACzBC,KAAK,CAAC,QAAD,CAAL;QACA;MACH;;MACD,KAAKL,QAAL,CAAc;QACVP,QAAQ,EAACS,KAAK,CAACC,MAAN,CAAaC;MADZ,CAAd;IAGH,CA/BuC;;IAAA,KAkCxCE,UAlCwC,GAkC1BP,IAAD,IAAS;MAClB,MAAM;QAACL;MAAD,IAAU,KAAKF,KAArB,CADkB,CAElB;;MACA,MAAMe,OAAO,GAAGb,KAAK,CAACc,MAAN,CAAaC,IAAI,IAAIA,IAAI,CAACV,IAAL,KAAcA,IAAnC,CAAhB;MACA,KAAKC,QAAL,CAAc;QAACN,KAAK,EAACa;MAAP,CAAd;IACH,CAvCuC;;IAAA,KA0CxCG,QA1CwC,GA0C5BX,IAAD,IAAS;MAChB,MAAMQ,OAAO,GAAG,CAAC,GAAG,KAAKf,KAAL,CAAWE,KAAf,CAAhB;MACAa,OAAO,CAACI,OAAR,CAAgBF,IAAI,IAAG;QACnBG,OAAO,CAACC,GAAR,CAAY,cAAZ;;QACA,IAAGJ,IAAI,CAACV,IAAL,KAAcA,IAAjB,EAAuB;UACnB,IAAIU,IAAI,CAACX,IAAL,KAAc,KAAlB,EAAyB;YACrBW,IAAI,CAACX,IAAL,GAAY,IAAZ;UACH,CAFD,MAEO;YACHW,IAAI,CAACX,IAAL,GAAY,KAAZ;UACH;QACJ;MACJ,CATD;MAUA,KAAKE,QAAL,CAAc;QAACN,KAAK,EAACa;MAAP,CAAd;IACC,CAvDmC;EAAA;;EAyDxCO,MAAM,GAAG;IACL,oBACI;MAAK,SAAS,EAAC,WAAf;MAAA,wBACI;QAAA,wBACI;UAAO,IAAI,EAAC,MAAZ;UAAmB,KAAK,EAAE,KAAKtB,KAAL,CAAWC,QAArC;UAA+C,QAAQ,EAAE,KAAKQ;QAA9D;UAAA;UAAA;UAAA;QAAA,QADJ,eAEI;UAAQ,OAAO,EAAE,KAAKN,OAAtB;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAFJ;MAAA;QAAA;QAAA;QAAA;MAAA,QADJ,EAMY;MACA,KAAKH,KAAL,CAAWE,KAAX,CAAiBqB,GAAjB,CAAsBN,IAAD,iBACjB,QAAC,IAAD,OAAyBA,IAAzB;QAA+B,UAAU,EAAE,KAAKH,UAAhD;QAA4D,QAAQ,EAAE,KAAKI;MAA3E,GAAWrB,MAAM,EAAjB;QAAA;QAAA;QAAA;MAAA,QADJ,CAPZ;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ;EAcH;;AAxEuC"},"metadata":{},"sourceType":"module"}