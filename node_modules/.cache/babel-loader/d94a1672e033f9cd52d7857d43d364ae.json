{"ast":null,"code":"var _jsxFileName = \"E:\\\\\\u684C\\u9762\\u6587\\u6863\\\\react_gua\\\\src\\\\App.jsx\";\n//创建外壳\nimport React, { Component } from \"react\";\nimport { nanoid } from 'nanoid';\nimport List from \"./List\";\nimport { ajax } from \"./utils/request\";\nimport './App.css'; //存入数组，序列化\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst saveTodo = function (todos) {\n  localStorage.todos = JSON.stringify(todos);\n};\n\nexport default class Todo extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      inpValue: '',\n      todos: []\n    };\n\n    this.handelTodo = event => {\n      this.setState({\n        inpValue: event.target.value\n      });\n      console.log(inpValue);\n    };\n\n    this.addTodo = () => {\n      ajax('POST', 'http://localhost:3005/todo/', {\n        task: this.state.inpValue\n      }, () => {\n        console.log('新增成功');\n      });\n    };\n\n    this.deleteTodo = time => {\n      const {\n        todos\n      } = this.state; //过滤一下todos数组,如果和传进来的一样就过滤掉传进来的time\n\n      const newTodo = todos.filter(todo => todo.time !== time);\n      this.setState({\n        todos: newTodo\n      });\n    };\n\n    this.doneTodo = time => {\n      const newTodo = [...this.state.todos];\n      newTodo.forEach(todo => {\n        console.log('donedonedone');\n\n        if (todo.time === time) {\n          if (todo.done === false) {\n            todo.done = true;\n          } else {\n            todo.done = false;\n          }\n        }\n      });\n      this.setState({\n        todos: newTodo\n      });\n    };\n  }\n\n  //保存本地\n  componentDidUpdate() {\n    saveTodo(this.state.todos);\n    console.log('todo写入');\n  } //读取数据\n\n\n  componentDidMount() {\n    ajax('GET', 'http://localhost:3005/todo/all', null, response => {\n      console.log('response', response);\n      this.setState({\n        todos: response.data.map(item => ({ ...item,\n          content: item.task\n        }))\n      });\n    });\n  } //input的事件监听，获取到输入的值\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todo-cell\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: this.state.inpValue,\n          onChange: this.handelTodo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.addTodo,\n          children: \"\\u589E\\u52A0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this), //遍历数组传给List\n      this.state.todos.map(todo => /*#__PURE__*/_jsxDEV(List, { ...todo,\n        deleteTodo: this.deleteTodo,\n        doneTodo: this.doneTodo\n      }, nanoid(), false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 29\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"names":["React","Component","nanoid","List","ajax","saveTodo","todos","localStorage","JSON","stringify","Todo","state","inpValue","handelTodo","event","setState","target","value","console","log","addTodo","task","deleteTodo","time","newTodo","filter","todo","doneTodo","forEach","done","componentDidUpdate","componentDidMount","response","data","map","item","content","render"],"sources":["E:/桌面文档/react_gua/src/App.jsx"],"sourcesContent":["//创建外壳\r\nimport React,{Component} from \"react\";\r\nimport {nanoid} from 'nanoid'\r\nimport List from \"./List\";\r\nimport { ajax } from \"./utils/request\";\r\nimport './App.css'\r\n\r\n//存入数组，序列化\r\nconst saveTodo = function(todos) {\r\n    localStorage.todos = JSON.stringify(todos)\r\n}\r\n\r\nexport default class Todo extends Component {\r\n\r\n    //初始化状态\r\n    state = {\r\n        inpValue:'',\r\n        todos:[],\r\n    }\r\n\r\n    //保存本地\r\n    componentDidUpdate() {\r\n        saveTodo(this.state.todos)\r\n        console.log('todo写入');\r\n    }\r\n    \r\n    //读取数据\r\n    componentDidMount() {\r\n        ajax('GET', 'http://localhost:3005/todo/all', null, (response) =>{\r\n            console.log('response', response);\r\n            this.setState({\r\n                todos:response.data.map(item =>({\r\n                    ...item,\r\n                    content: item.task\r\n                }))\r\n            })\r\n        })\r\n    }\r\n\r\n    //input的事件监听，获取到输入的值\r\n    handelTodo = (event) =>{\r\n        this.setState({\r\n            inpValue:event.target.value\r\n        })\r\n        console.log(inpValue);\r\n    }\r\n\r\n    //button的点击事件,添加一个todoList\r\n    addTodo = () =>{\r\n        ajax('POST', 'http://localhost:3005/todo/', {\r\n            task: this.state.inpValue,\r\n        }, () =>{\r\n            console.log('新增成功');\r\n        })\r\n    }\r\n\r\n    //删除一个todoList\r\n    deleteTodo = (time) =>{\r\n        const {todos} = this.state\r\n        //过滤一下todos数组,如果和传进来的一样就过滤掉传进来的time\r\n        const newTodo = todos.filter(todo => todo.time !== time)\r\n        this.setState({todos:newTodo})\r\n    }\r\n\r\n    //增加一个done\r\n    doneTodo = (time) =>{\r\n        const newTodo = [...this.state.todos]\r\n        newTodo.forEach(todo =>{\r\n            console.log('donedonedone');\r\n            if(todo.time === time) {\r\n                if (todo.done === false) {\r\n                    todo.done = true\r\n                } else {\r\n                    todo.done = false\r\n                }\r\n            }\r\n        })\r\n        this.setState({todos:newTodo})\r\n        }\r\n    \r\n    render() {\r\n        return(\r\n            <div className=\"todo-cell\">\r\n                <div>\r\n                    <input type=\"text\" value={this.state.inpValue} onChange={this.handelTodo}/>\r\n                    <button onClick={this.addTodo}>增加</button>\r\n                </div>\r\n                    {\r\n                        //遍历数组传给List\r\n                        this.state.todos.map((todo) =>(\r\n                            <List key={nanoid()} {...todo} deleteTodo={this.deleteTodo} doneTodo={this.doneTodo}/>\r\n                        ))\r\n                    }\r\n            </div>\r\n        )\r\n    }\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}