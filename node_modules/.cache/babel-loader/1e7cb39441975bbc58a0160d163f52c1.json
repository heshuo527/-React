{"ast":null,"code":"var _jsxFileName = \"E:\\\\\\u684C\\u9762\\u6587\\u6863\\\\react_gua\\\\src\\\\App.jsx\";\n//创建外壳\nimport React, { Component } from \"react\";\nimport Item from \"./Item\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst saveTodo = todos => {\n  localStorage.todos = JSON.stringify(todos);\n};\n\nexport default class App extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      inpValue: '',\n      todos: []\n    };\n\n    this.handelChange = event => {\n      console.log(event.target.value);\n      this.setState({\n        inpValue: event.target.value\n      });\n    };\n\n    this.addTodo = () => {\n      const {\n        todos\n      } = this.state;\n      todos.push({\n        content: this.state.inpValue,\n        done: false,\n        time: Date.now()\n      });\n      this.setState({\n        todos: todos\n      });\n      console.log('addTodo被点击了');\n    };\n\n    this.todoDelete = time => {\n      console.log('32321213123');\n      const {\n        todos\n      } = this.state;\n      const newTodo = todos.filter(todo => todo.time !== time);\n      this.setState({\n        todos: newTodo\n      });\n    };\n\n    this.todoDone = time => {\n      const newTodo = [...this.state.todos];\n      newTodo.forEach(todo => {\n        if (todo.time === time) {\n          if (todo.done === false) {\n            todo.done = true;\n          } else {\n            todo.done = false;\n          }\n        }\n      });\n      this.setState({\n        todos: newTodo\n      });\n    };\n  }\n\n  componentDidUpdate() {\n    saveTodo(this.state.todos);\n  }\n\n  componentDidMount() {\n    let todos = localStorage.todos;\n\n    if (!todos) {\n      todos = '[]';\n    }\n\n    this.setState({\n      todos: JSON.parse(todos)\n    });\n  } //获取input上输入的值\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: this.state.inpValue,\n          onChange: this.handelChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.addTodo,\n          children: \"\\u589E\\u52A0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this), this.state.todos.map(todo => /*#__PURE__*/_jsxDEV(Item, { ...todo,\n        todoDelete: this.todoDelete,\n        todoDone: this.todoDone\n      }, todo.time, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"names":["React","Component","Item","saveTodo","todos","localStorage","JSON","stringify","App","state","inpValue","handelChange","event","console","log","target","value","setState","addTodo","push","content","done","time","Date","now","todoDelete","newTodo","filter","todo","todoDone","forEach","componentDidUpdate","componentDidMount","parse","render","map"],"sources":["E:/桌面文档/react_gua/src/App.jsx"],"sourcesContent":["//创建外壳\r\nimport React, {Component} from \"react\";\r\nimport Item from \"./Item\";\r\n\r\nconst saveTodo = (todos) =>{\r\n    localStorage.todos = JSON.stringify(todos)\r\n}\r\n\r\n\r\nexport default class App extends Component {\r\n\r\n    state = {\r\n        inpValue : '',\r\n        todos : [],\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        saveTodo(this.state.todos)\r\n    }\r\n\r\n    componentDidMount() {\r\n        let todos = localStorage.todos\r\n        if(!todos) {\r\n            todos = '[]'\r\n        }\r\n        this.setState({\r\n            todos:JSON.parse(todos)\r\n        })\r\n    }\r\n    //获取input上输入的值\r\n    handelChange = (event) => {\r\n        console.log(event.target.value);\r\n        this.setState({\r\n            inpValue:event.target.value\r\n        })\r\n    }\r\n\r\n    //addTodo的方法\r\n    addTodo = () =>{\r\n        const {todos} = this.state\r\n        todos.push({\r\n            content:this.state.inpValue,\r\n            done:false,\r\n            time: Date.now(),\r\n        })\r\n        this.setState({\r\n            todos:todos\r\n        })\r\n        console.log('addTodo被点击了');\r\n    }\r\n\r\n    //删除一个todo\r\n    todoDelete = (time) =>{\r\n        console.log('32321213123');\r\n        const {todos} = this.state\r\n        const newTodo = todos.filter(todo => todo.time !== time)\r\n        this.setState({\r\n            todos:newTodo\r\n        })\r\n        \r\n    }\r\n\r\n    //todoDone开关一个元素的className\r\n    todoDone = (time) =>{\r\n        const newTodo = [...this.state.todos]\r\n        newTodo.forEach(todo => {\r\n            if(todo.time === time){\r\n                if(todo.done === false) {\r\n                    todo.done = true\r\n                } else {\r\n                    todo.done = false\r\n                }\r\n                \r\n            }\r\n        })\r\n        this.setState({\r\n            todos:newTodo\r\n        })\r\n        }\r\n            \r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n          <div>\r\n            <input type=\"text\" value={this.state.inpValue} onChange={this.handelChange}/>\r\n            <button onClick={this.addTodo}>增加</button>\r\n          </div>\r\n            {\r\n                this.state.todos.map((todo) =>(\r\n                    <Item key={todo.time} {...todo} todoDelete={this.todoDelete} todoDone={this.todoDone}/>\r\n                ))\r\n            }\r\n      </div>\r\n    )\r\n  }\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}